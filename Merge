#include <stdio.h>
#include <stdlib.h>

int comparison_count = 0;

struct Node {
    int key;
    struct Node *left, *right;
};

struct Node* newNode(int item) {
    struct Node* temp = (struct Node*)malloc(sizeof(struct Node));
    temp->key = item;
    temp->left = temp->right = NULL;
    return temp;
}

struct Node* insert(struct Node* node, int key) {
    if (node == NULL)
        return newNode(key);
    
    comparison_count++;
    if (key < node->key)
        node->left = insert(node->left, key);
    else
        node->right = insert(node->right, key);
    
    return node;
}

void inorder(struct Node* root) {
    if (root != NULL) {
        inorder(root->left);
        printf("%d ", root->key);
        inorder(root->right);
    }
}

int main() {
    struct Node* root = NULL;
    int arr[10];
    int i;

    printf("Enter 10 numbers: \n");
    for (i = 0; i < 10; i++) {
        scanf("%d", &arr[i]);
        root = insert(root, arr[i]);
    }

    printf("Sorted array: ");
    inorder(root);
    printf("\n");

    printf("Total comparisons: %d\n", comparison_count);

    return 0;
}
